<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Attribute Selectors</title>
<link href="_css/styles.css" rel="stylesheet" type="text/css">
<style>
/*Styles go here*/
p[class~="syntax"] {
	color: red;
}
a[title~="visit"] {
	background: yellow;
}
</style>
</head>
<body>
<header>
  <h1>CSS Selectors</h1>
  <h2>Attribute Selectors</h2>
</header>
<main>
  <table class="compatibility">
    <caption>
    Browser compatibility
    </caption>
    <tr>
      <th class="chrome">Chrome</th>
      <th class="mozilla">Firefox (Gecko)</th>
      <th class="IE">Internet Explorer</th>
      <th class="opera">Opera</th>
      <th class="safari">Safari</th>
    </tr>
    <tr>
      <td><span class="yes">All</span></td>
      <td><span class="yes">1.0</span></td>
      <td><span class="yes">7</span></td>
      <td><span class="yes">9</span></td>
      <td><span class="yes">3</span></td>
    </tr>
  </table>
  <article class="summary">
    <p>Matches elements when the specified attribute is present. Variations on syntax allow you to target specific attribute values and include options for matching specific string values. While it&rsquo;s not necessary to preface the attribute value with a simple selector, doing so allows you to match specific element types with attribute values.</p>
    <h3>Matching Values Syntax</h3>
    <p>To match specific values you can modify the syntax to also include the value itself. To match an exact value you simple add the assignment operator (the equals sign) followed by the desired value. As in HTML syntax, the value should be in quotation marks. It&rsquo;s important to note that this syntax will only return a match if the attribute value is an exact match. The selector <strong>p[class=&rdquo;tip&rdquo;]</strong> would match <strong>&lt;p class=&rdquo;tip&rdquo;&gt;</strong> but not <strong>&lt;class=&rdquo;tip clear&rdquo;&gt;</strong>. To allow for space separated values add a tilde (~) character prior to the equals sign. The selector <strong>p[class~=&rdquo;tip&rdquo;]</strong> would return a match in both of the previous examples.</p>
    <figure>
      <pre>
<code>
<span class="selector">[class="tip"]</span> {
  color: red;
    }
    
<span class="selector">[class~="tip"]</span> {
  color: red;
    }
    
</code></pre>
      <figcaption>Attribute selectors: matching values</figcaption>
    </figure>
  </article>
  <article class="example">
    <h3>Example:</h3>
    <section>
      <h4>Attribute selectors</h4>
      <p class="syntax">Basic attribute selector syntax allows you to target elements based on the presence of an attribute, regardless of the value.</p>
      <p class="links syntax">Attribute selectors are especially helpful at styling links, allowing you to style <a href="links.htm" title="visit our helpful links">relative links</a>, <a href="http://www.lynda.com" title="visit lynda.com">external links</a>, links to <a href="#top">page regions</a>, and links to <a href="resources/tips.pdf" title="helpful resources">resources</a> indivdually.</p>
      <h4 class="tip">Options:</h4>
      <ul>
        <li class="tip-easy">You can match specific values</li>
        <li class="tip-easy">You can match a specific value from a space-separated list</li>
        <li class="tip-med">You can match a value's prefix</li>
        <li class="tip-med">You can match a value's suffix</li>
        <li class="tip-adv">You can match a value that contain's a specified string value</li>
      </ul>
    </section>
  </article>
</main>
</body>
</html>
